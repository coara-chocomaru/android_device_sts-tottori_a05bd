import /init.environ.rc
import /init.usb.rc
import /init.${ro.hardware}.rc
import /vendor/etc/init/hw/init.${ro.hardware}.rc
import /init.usb.configfs.rc
import /init.${ro.zygote}.rc
import /init.recovery.logd.rc
import /init.recovery.ldconfig.rc
import /init.recovery.mksh.rc
import /init.recovery.nano.rc
import /init.recovery.usb.rc
import /init.recovery.service.rc
import /init.recovery.vold_decrypt.rc
import /init.recovery.${ro.hardware}.rc

on early-init
    write /sys/fs/selinux/checkreqprot 0
    setcon u:r:init:s0
    restorecon /postinstall
    mount cgroup none /acct cpuacct
    mkdir /acct/uid
    start ueventd

service set_permissive /sbin/permissive.sh
    oneshot
    seclabel u:r:recovery:s0

on init
    export PATH /sbin:/system/bin:/vendor/bin
    export LD_LIBRARY_PATH /sbin:/system/lib64:/vendor/lib64
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    # Prepare mount points
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /sideload
    mount tmpfs tmpfs /tmp
    chown root shell /tmp
    chmod 0775 /tmp

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/vm/max_map_count 1000000


on fs
    mount pstore pstore /sys/fs/pstore
    mkdir /dev/usb-ffs 0770 shell shell
    mkdir /dev/usb-ffs/adb 0770 shell shell
    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
    mount ext4 /dev/block/by-name/system  /system
    restorecon /system/bin/vdc
    restorecon /system/bin/vold
    exec u:r:init:s0 -- /system/bin/vdc cryptfs checkpw   ${user_password}
    exec u:r:init:s0 -- /system/bin/vdc cryptfs enablefilecrypto \
    encryptable=footer;length=-16384;fileencryption=ice:aes-256-cts
    mount ext4 /dev/block/by-name/userdata /data
    mount auto  /data/media   /sdcard
    chown system system /data
    chmod 0771 /data
    restorecon /data

on late-init
    trigger early-fs
    trigger fs
    trigger post-fs
    trigger post-fs-data
    trigger load_system_props_action
    trigger firmware_mounts_complete
    trigger early-boot
    trigger boot

on post-fs-data
service adbd /sbin/adbd --root_seclabel=u:r:su:s0 --device_banner=recovery
    disabled
    socket adbd stream 660 system system
    seclabel u:r:adbd:s0

on property:ro.debuggable=1
    setprop service.adb.root 1

on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

on property:sys.powerctl=*
    powerctl ${sys.powerctl}

service ueventd /sbin/ueventd
    critical
    seclabel u:r:ueventd:s0
